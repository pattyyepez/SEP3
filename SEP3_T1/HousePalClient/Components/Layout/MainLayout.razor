@using System.Security.Claims
@using HousePalClient.Auth
@using Microsoft.AspNetCore.Components
@inherits Microsoft.AspNetCore.Components.LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider

<head>
    <title>HousePal!</title>
    <!-- Add Font Awesome CDN to your head tag -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<div class="main-layout">
    <!-- Top Banner -->
    <div class="banner">
        <button class="menu-button" @onclick="ToggleSidebar"><div class="icon @(_isSidebarOpen ? "open" : "")"><i class="fa-solid fa-bars"></i></div></button>

        <img src="/images/logo.png" alt="HousePal Logo" class="logo" @onclick="HandleLogoClick" />

        <div class="profile-picture-container" @onclick="TogglePopup">
            @if (!string.IsNullOrWhiteSpace(_profilePicture))
            {
                <img src="https://localhost:7134/Filesave/@_profilePicture.Split('.')[0]/@_profilePicture.Split('.')[1]" alt="Profile Picture" class="profile-picture"/>
            }
        </div>
    </div>

    <div class="popup @(_isPopupOpen ? "show" : "")">
        <ul>
            <li>
                <button onclick="window.location.href = '/view-my-account'"><i class="fa-solid fa-user"></i> Account</button>
            </li>
            <li>
                <button @onclick="HandleLogout"><i class="fa-solid fa-right-to-bracket"></i> Log Out</button>
            </li>
        </ul>
    </div>

    <!-- Sidebar -->
    <CascadingAuthenticationState>
        <AuthorizeView Roles="HouseOwner">
            <div class="sidebar @(_isSidebarOpen ? "open" : "")">
                <nav class="menu">
                    <ul>
                        <li>
                            <button onclick="window.location.href = '/view-all-house-profiles'"><i class="fas fa-home"></i> My Houses</button>
                        </li>
                        <li>
                            <button onclick="window.location.href = '/view-my-listings'"><i class="fas fa-list"></i> My Listings</button>
                        </li>
                        <li>
                            <button onclick="window.location.href = '/view-confirmed-stays'"><i class="fas fa-check-circle"></i> Confirmed Stays</button>
                        </li>
                        <li>
                            <button onclick="window.location.href = '/view-my-past-listings'"><i class="fas fa-history"></i> Past Listings</button>
                        </li>
                        <li>
                            <button href="/dashboard"><i class="fas fa-pencil-alt"></i> Pending for Review</button>
                        </li>
                    </ul>
                </nav>
            </div>
        </AuthorizeView>

        <AuthorizeView Roles="HouseSitter">
            <div class="sidebar @(_isSidebarOpen ? "open" : "")">
                <nav class="menu">
                    <ul>
                        <li>
                            <button onclick="window.location.href = '/browse-listings'"><i class="fas fa-home"></i> Browse Listings</button>
                        </li>
                        <li>
                            <button onclick="window.location.href = '/view-my-applications'"><i class="fas fa-list"></i> My Applications</button>
                        </li>

                        <li>
                            <button onclick="window.location.href = '/view-my-confirmed-stays'"><i class="fas fa-check-circle"></i> Confirmed Stays</button>
                        </li>
                        <li>
                            <button onclick="window.location.href = '/view-my-past-stays'"><i class="fas fa-history"></i> Past Stays</button>
                        </li>
                    </ul>
                </nav>
            </div>
        </AuthorizeView>
        
    </CascadingAuthenticationState>

    <!-- Main Content Area -->
    <div class="content">
        @Body
    </div>
</div>

<style>

    @@font-face {
        font-family: 'LogoFont';
        src: url('fonts/logo-font.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    @@font-face {
        font-family: 'FuturaFont';
        src: url('fonts/futura.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    /* Main Layout Styles */
    .main-layout {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        overflow: hidden;
    }

    /* Top Banner */
    .banner {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1em;
        background: linear-gradient(135deg, #ff7e5f, #feb47b); /* Coral Gradient */
        height: 7em;
        z-index: 1000;
    }

    .menu-button {
        color: white;
        background: none;
        font-size: 1.8em;
        border-style: none;
    }

    .logo {
        width: 6em;
        height: auto;
        cursor: pointer;
    }

    .profile-picture {
        width: 4em;
        height: 4em;
        border-radius: 50%;
        cursor: pointer;
        object-fit: cover;
        display: block;
    }

    /* Sidebar */
    .sidebar {
        display: flex;
        width: 16.5em;
        background-color: white;
        position: fixed;
        height: 100%;
        top: 0;
        left: 0;
        transform: translateX(-100%);
        transition: transform 0.3s ease-in-out;
        padding: 7em 1em 1em 1em;
        color: #fff;
        box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);
        z-index: 900;
    }

    .sidebar.open {
        transform: translateX(0) !important;
    }
    
    .icon {
        transition: transform 0.3s ease-in-out;
    }
    
    .icon.open {
        transform: rotate(90deg) !important;
    }

    .menu {
        font-family: 'FuturaFont', sans-serif;
        width: 15em;
    }

    .menu ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .menu li {
        margin: 1em 0;
    }

    .menu ul li button {
        color: #3d3d3d;
        text-decoration: none;
        font-size: 1.2em;
        border-style: none;
        border-radius: 5px;
        width: 100%;
        height: 2.2em;
        background: none;
        text-align: left;
    }

    .menu button:hover {
        background-color: rgba(61, 61, 61, 0.1);
    }

    .menu button:focus {
        background-color: rgba(61, 61, 61, 0.1);
        font-weight: bold;
    }

    /* Content Area */
    .content {
        flex: 1;
        position: relative;
        z-index: 100;
        overflow-y: auto;
        padding: 3em;
    }

    .main-layout::after {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.6s ease-in-out, visibility 0.6s ease-in-out;
        z-index: 1050;
    }

    .main-layout.sidebar-open::after {
        opacity: 1;
        visibility: visible;
    }

    .sidebar.open + .content {
        filter: blur(3px);
        pointer-events: none;
    }

    .popup {
        position: absolute;
        top: 6.35em;
        right: 2em;
        background-color: white;
        border-radius: 9px;
        box-shadow: 0.5px 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1300;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
        padding: 0.5em;
        width: 9em;
        font-family: 'FuturaFont', sans-serif;
    }

    .popup.show {
        opacity: 1 !important;
        visibility: visible !important;
    }

    .popup ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .popup li {
        margin: 0.4em;
    }

    .popup ul li button {
        color: #3d3d3d;
        text-decoration: none;
        font-size: 1.2em;
        border-style: none;
        border-radius: 5px;
        width: 100%;
        height: 2.2em;
        background: none;
        text-align: left;
    }

    .popup button:hover {
        background-color: rgba(61, 61, 61, 0.1);
    }

    .popup button:focus {
        background-color: rgba(61, 61, 61, 0.1);
        font-weight: bold;
    }

</style>

@code {
    private bool _isSidebarOpen;
    private bool _isPopupOpen;
    private string _profilePicture = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is null || !user.Identity.IsAuthenticated)
        {
            Console.WriteLine("Not authenticated");
            return;
        }
        
        IEnumerable<Claim> claims = user.Claims;
        _profilePicture = claims.Single(c => c.Type == "ProfilePicture").Value;
        
        await InvokeAsync(StateHasChanged);
    }

    private void ToggleSidebar()
    {
        _isSidebarOpen = !_isSidebarOpen;
    }

    private void TogglePopup()
    {
        Console.WriteLine($"Popup state changed: {_isPopupOpen}");
        _isPopupOpen = !_isPopupOpen;
        Console.WriteLine($"Popup state changed: {_isPopupOpen}");
        StateHasChanged();
    }
    private void HandleLogout()
    {
        if (AuthProvider is SimpleAuthProvider simpleAuthProvider)
        {
            simpleAuthProvider.Logout();
            Navigation.NavigateTo("/login", true);
        }
    }
    private async Task HandleLogoClick()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is null || !user.Identity.IsAuthenticated)
        {
            Navigation.NavigateTo("/login");
            return;
        }

        if (user.IsInRole("HouseOwner"))
        {
            Navigation.NavigateTo("/view-all-house-profiles");
        }
        else if (user.IsInRole("HouseSitter"))
        {
            Navigation.NavigateTo("/browse-listings");
        }
    }

}
<Preload LoadingText="Loading..."></Preload>