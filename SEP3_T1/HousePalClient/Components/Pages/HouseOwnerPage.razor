@page "/HouseOwnerPage"
@rendermode InteractiveServer

@inject HttpClient Http
@using DTOs.HouseOwner
@using Microsoft.AspNetCore.Components
@using Services

<h3>HouseOwnerPage</h3>

<input @bind="_houseOwnerId" />
<button @onclick="GetHouseOwner">Get House Owner</button>

<br/>

<input @bind="_houseOwnerAddress" />
<input @bind="_houseOwnerBiography" />
<button @onclick="CreateHouseOwner">Create House Owner</button>

<br/>

<input @bind="_houseOwnerId" />
<input @bind="_houseOwnerAddress" />
<input @bind="_houseOwnerBiography" />
<button @onclick="UpdateHouseOwner">Update House Owner</button>

<br/>

<input @bind="_houseOwnerId" />
<button @onclick="DeleteHouseOwner">Delete House Owner</button>

<p>Gotten House Owner: @_houseOwner.UserId, @_houseOwner.Address, @_houseOwner.Biography</p>

@code {
    [Inject] public IHouseOwnerService HouseOwnerService { get; set; }
    string _houseOwnerId = "";
    string _houseOwnerAddress = "";
    string _houseOwnerBiography = "";
    HouseOwnerDto _houseOwner = new HouseOwnerDto();
    
    async void GetHouseOwner()
    {
        _houseOwner = await HouseOwnerService.GetSingleAsync(int.Parse(_houseOwnerId));
        Console.WriteLine($"{_houseOwner.UserId} - {_houseOwner.Address} - {_houseOwner.Biography}");
        await InvokeAsync(StateHasChanged);
    }
    
    async void CreateHouseOwner()
    {
        _houseOwner.Address = _houseOwnerAddress;
        _houseOwner.Biography = _houseOwnerBiography;
        _houseOwner = await HouseOwnerService.AddAsync(_houseOwner);
        Console.WriteLine($"{_houseOwner.UserId} - {_houseOwner.Address} - {_houseOwner.Biography}");
        await InvokeAsync(StateHasChanged);
    }
    
    async void UpdateHouseOwner()
    {
        _houseOwner.UserId = int.Parse(_houseOwnerId);
        _houseOwner.Address = _houseOwnerAddress;
        _houseOwner.Biography = _houseOwnerBiography;
        _houseOwner = await HouseOwnerService.UpdateAsync(_houseOwner);
        Console.WriteLine($"{_houseOwner.UserId} - {_houseOwner.Address} - {_houseOwner.Biography}");
        await InvokeAsync(StateHasChanged);
    }
    
     async void DeleteHouseOwner()
    {
        await HouseOwnerService.DeleteAsync(int.Parse(_houseOwnerId));
        // await InvokeAsync(StateHasChanged);
    }
}