@page "/view-house-profile/{profileId:int}"
@using DTOs.HouseProfile
@using HousePalClient.Components.Layout
@using Microsoft.AspNetCore.Components
@using Services
@layout MainLayout
@inject NavigationManager Navigation
@inject IHouseProfileService HouseProfileService


<head>
    <!-- Add Font Awesome CDN to your head tag -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<div class="profile-container">
    @if (houseProfile == null)
    {
        <p>Loading house profile details...</p>
    }
    else
    { 
        <div class="container house-profile">
            <!-- Carousel Section -->
            <div class="carousel-container">
                <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        @for (int i = 0; i < Images.Count; i++)
                        {
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i"
                                    class="@(i == 0 ? "active" : "")"
                                    aria-current="@(i == 0 ? "true" : "false")"
                                    aria-label="Slide @i"></button>
                        }
                    </div>
                    <div class="carousel-inner">
                        @foreach (var image in Images)
                        {
                            <div class="carousel-item @(Images.IndexOf(image) == 0 ? "active" : "")">
                                <img src="@image" class="d-block w-100" alt="House Image">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>

            <!-- House Title and Location -->
            <h1 class="house-title">@houseProfile.Title</h1>
            <h2 class="house-location"><i class="fa-solid fa-location-dot" style="color: #ff7e5f;"></i> @houseProfile.City, @houseProfile.Region</h2>
            <p class="house-description">@houseProfile.Description</p>

            <hr class="section-divider"/>

            <!-- House Chores & Amenities Section -->
            <div class="chores-amenities-row">
                <div class="chores-column">
                    <h3>House Chores</h3>
                    <div class="chores-container">
                        @foreach (var chore in houseProfile.Chores)
                        {
                            <div class="pill">@chore</div>
                        }
                    </div>
                </div>
                <div class="vertical-divider"></div>
                <div class="amenities-column">
                    <h3>House Amenities</h3>
                    <div class="amenities-container">
                        @foreach (var amenity in houseProfile.Amenities)
                        {
                            <div class="pill">@amenity</div>
                        }
                    </div>
                </div>
            </div>

            <hr class="section-divider"/>

            <!-- House Rules Section -->
            <h3>House Rules</h3>
            <ol class="house-rules">
                @foreach (var rule in houseProfile.Rules)
                {
                    <li>@rule</li>
                }
            </ol>

            <hr class="section-divider"/>

            <!-- Meet the Host Section -->
            <h3>Meet the Host</h3>
            <div class="host-section">
                <img src="@houseProfile.Owner.ProfilePicture" alt="Host Profile Picture" class="host-picture"/>
                <p class="host-bio">@houseProfile.Owner.Biography</p>
            </div>

            <hr class="section-divider"/>

            <!-- Buttons Section -->
            <div class="action-buttons">
                <button type="button" class="btn btn-primary" @onclick="EditHouseProfile">Edit House Profile</button>
                <button type="button" class="btn btn-secondary" @onclick="DeleteHouseProfile">Delete House Profile</button>
            </div>
        </div>
    }
</div>

<style>

    @@font-face {
        font-family: 'LogoFont';
        src: url('fonts/logo-font.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    @@font-face {
        font-family: 'FuturaFont';
        src: url('fonts/futura.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }
    
    h3 {
        font-family: 'LogoFont', sans-serif;
        color: #3d3d3d;
    }

    .carousel-container {
        margin-bottom: 2em;
    }

    .host-section {
        display: flex;
        align-items: center;
        gap: 1.5em;
    }

    .host-picture {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
    }

    .host-bio {
        flex: 1;
        font-size: 1rem;
        color: #333;
        line-height: 1.6;
    }
    
    .carousel img { 
        max-height: 32em; 
        object-fit: cover; 
        border-radius: 10px; 
    } 
    
    .profile-container{
        padding: 0.85em;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .house-title {
        font-size: 2.5rem;
        color: #333;
        margin-bottom: 0.5em;
        font-family: 'LogoFont', sans-serif;
    }

    .house-location {
        font-size: 1.25rem;
        color: #3d3d3d;
        margin-bottom: 1em;
        font-family: 'FuturaFont', sans-serif;
    }

    .house-description {
        font-size: 1rem;
        color: #3d3d3d;
        margin-bottom: 1.5em;
        font-family: 'FuturaFont', sans-serif;
    }

    .section-divider {
        margin: 2em 0;
        border: 0;
        height: 1px;
        background-color: #ddd;
    }

    .chores-amenities-row {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        gap: 1em;
        font-family: 'FuturaFont', sans-serif;
    }

    .chores-column, .amenities-column {
        flex: 1;
    }

    .chores-container, .amenities-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
        margin-top: 1em;
    }

    .pill {
        background-color: #ff7e5f;
        color: white;
        padding: 0.5em 1em;
        border-radius: 50px;
        font-size: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: 'FuturaFont', sans-serif;
    }

    .vertical-divider {
        width: 1px;
        background-color: #ddd;
        height: auto;
        margin: 0 1em;
    }

    .house-rules {
        list-style: decimal inside;
        font-size: 1rem;
        color: #3d3d3d;
        line-height: 1.8;
        margin: 1em 0;
        font-family: 'FuturaFont', sans-serif;
    }

    .house-rules li {
        margin-bottom: 0.5em;
    }

    .action-buttons {
        margin-top: 2em;
        display: flex;
        gap: 2em;
        justify-content: center;
    }
    
</style>

@code {
    
    private string HouseTitle = "Cozy Countryside Home";
    private string HostProfilePicture = "/images/profilepic1.jpg";
    private string HostBio = "Just a cool and very chill guy, you know, doing cool guy stuff";
    private string City = "Springfield";
    private string Region = "Illinois";
    private string HouseDescription = "A charming house perfect for a peaceful getaway. Surrounded by lush greenery.";
    private List<string> HouseChores = new List<string> { "Water plants", "Feed pets", "Take out trash" };
    private List<string> HouseAmenities = new List<string> { "Wi-Fi", "Garden", "Pool", "Washer/Dryer" };
    private List<string> HouseRules = new List<string>
    {
        "No smoking inside the house.",
        "Pets are allowed but must be supervised.",
        "Please keep noise levels down after 10 PM.",
        "Leave the house clean and tidy before departure."
    };
    private List<string> Images = new List<string>
    {
        "/images/loginBackgrounds/1.jpg",
        "/images/loginBackgrounds/2.jpg",
        "/images/loginBackgrounds/3.jpg", 
        "/images/loginBackgrounds/4.jpg"
    };

    private void EditHouseProfile()
    {
        Console.WriteLine("Edit House Profile clicked!");
        // Navigate or open edit page logic here
    }

    private void DeleteHouseProfile()
    {
        Console.WriteLine("Delete House Profile clicked!");
        // Confirm delete logic here
    }
    
    [Parameter]
    public int profileId { get; set; } 

    private HouseProfileDto houseProfile;

    protected override async Task OnInitializedAsync()
    {
        await LoadHouseProfile();
    }

    private async Task LoadHouseProfile()
    {
        houseProfile = await HouseProfileService.GetSingleAsync(profileId); 
    }
}
