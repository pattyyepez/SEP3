@page "/view-house-listing/{listingId:int}"
@using DTOs.HouseListing
@using HousePalClient.Components.Layout
@using Microsoft.AspNetCore.Components
@using Services
@layout MainLayout
@inject NavigationManager Navigation
@inject IHouseListingService HouseListingService
@inject IHouseProfileService HouseProfileService

<div class="listing-container">
    @if (houseListing == null)
    {
    <p>Loading house listing details...</p>
    }
    else
    {
        <div class="container house-profile">
            <!-- Carousel Section -->
            <div class="carousel-container">
                <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        @for (int i = 0; i < Images.Count; i++)
                        {
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i"
                                    class="@(i == 0 ? "active" : "")"
                                    aria-current="@(i == 0 ? "true" : "false")"
                                    aria-label="Slide @i"></button>
                        }
                    </div>
                    <div class="carousel-inner">
                        @foreach (var image in Images)
                        {
                            <div class="carousel-item @(Images.IndexOf(image) == 0 ? "active" : "")">
                                <img src="@image" class="d-block w-100" alt="House Image">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>

            <div class="info-section">
                
                <div class="text-content">
                    <!-- House Title and Location -->
                    <h1 class="house-title">@houseListing.Profile.Title</h1>
                    <h2 class="house-location"><i class="fa-solid fa-location-dot" style="color: #ff7e5f;"></i> @houseListing.Profile.City, @houseListing.Profile.Region</h2>
                    <p class="house-description">@houseListing.Profile.Description</p>
                </div>
                
                <div class="dates">
                    <p><strong>Start Date: </strong>@houseListing.StartDate</p>
                    <p><strong>End Date: </strong>@houseListing.EndDate</p>
                </div>
                
            </div>

            <hr class="section-divider"/>

            <!-- House Chores & Amenities Section -->
            <div class="chores-amenities-row">
                <div class="chores-column">
                    <h3>House Chores</h3>
                    <div class="chores-container">
                        @foreach (var chore in houseListing.Profile.Chores)
                        {
                            <div class="pill">@chore</div>
                        }
                    </div>
                </div>
                <div class="vertical-divider"></div>
                <div class="amenities-column">
                    <h3>House Amenities</h3>
                    <div class="amenities-container">
                        @foreach (var amenity in houseListing.Profile.Amenities)
                        {
                            <div class="pill">@amenity</div>
                        }
                    </div>
                </div>
            </div>

            <hr class="section-divider"/>

            <!-- House Rules Section -->
            <h3>House Rules</h3>
            <ol class="house-rules">
                @foreach (var rule in houseListing.Profile.Rules)
                {
                    <li>@rule</li>
                }
            </ol>

            <hr class="section-divider"/>

            <!-- Meet the Host Section -->
            <h3>Meet the Host</h3>
            <div class="host-section">
                <img src="@houseListing.Profile.Owner.ProfilePicture" alt="Host Profile Picture" class="host-picture"/>
                <p class="host-bio">@houseListing.Profile.Owner.Biography</p>
            </div>

            <hr class="section-divider"/>

        </div>  
    }
</div>

<style>
    @@font-face {
        font-family: 'LogoFont';
        src: url('fonts/logo-font.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    @@font-face {
        font-family: 'FuturaFont';
        src: url('fonts/futura.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    h3 {
        font-family: 'LogoFont', sans-serif;
        color: #3d3d3d;
    }
    
    .info-section {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        gap: 2em;
        margin-top: 1.5em;
    }
    
    .text-content {
        flex: 2;
    }
    
    .dates {
        flex: 0.65;
        background-color: #ff7e5f;
        padding: 1em;
        border-radius: 10px;
        text-align: center;
        font-family: 'FuturaFont', sans-serif;
        color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .dates p{
        margin: 0.5em 0;
    }
    

    .carousel-container {
        margin-bottom: 2em;
    }

    .host-section {
        display: flex;
        align-items: center;
        gap: 1.5em;
    }

    .host-picture {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
    }

    .host-bio {
        flex: 1;
        font-size: 1rem;
        color: #333;
        line-height: 1.6;
    }

    .carousel img {
        max-height: 32em;
        object-fit: cover;
        border-radius: 10px;
    }

    .profile-container{
        padding: 0.85em;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .house-title {
        font-size: 2.5rem;
        color: #333;
        margin-bottom: 0.5em;
        font-family: 'LogoFont', sans-serif;
    }

    .house-location {
        font-size: 1.25rem;
        color: #3d3d3d;
        margin-bottom: 1em;
        font-family: 'FuturaFont', sans-serif;
    }

    .house-description {
        font-size: 1rem;
        color: #3d3d3d;
        margin-bottom: 1.5em;
        font-family: 'FuturaFont', sans-serif;
    }

    .section-divider {
        margin: 2em 0;
        border: 0;
        height: 1px;
        background-color: #ddd;
    }

    .chores-amenities-row {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        gap: 1em;
        font-family: 'FuturaFont', sans-serif;
    }

    .chores-column, .amenities-column {
        flex: 1;
    }

    .chores-container, .amenities-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
        margin-top: 1em;
    }

    .pill {
        background-color: #ff7e5f;
        color: white;
        padding: 0.5em 1em;
        border-radius: 50px;
        font-size: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: 'FuturaFont', sans-serif;
    }

    .vertical-divider {
        width: 1px;
        background-color: #ddd;
        height: auto;
        margin: 0 1em;
    }

    .house-rules {
        list-style: decimal inside;
        font-size: 1rem;
        color: #3d3d3d;
        line-height: 1.8;
        margin: 1em 0;
        font-family: 'FuturaFont', sans-serif;
    }

    .house-rules li {
        margin-bottom: 0.5em;
    }
</style>

@code {
    [Parameter]
    public int listingId { get; set; }

    private HouseListingDto houseListing;

    protected override async Task OnInitializedAsync()
    {
        await LoadHouseListingDetails();
    }

    private async Task LoadHouseListingDetails()
    {
        houseListing = await HouseListingService.GetSingleAsync(listingId);

        if (houseListing.Profile == null && houseListing.ProfileId != 0)
        {
            houseListing.Profile = await HouseProfileService.GetSingleAsync(houseListing.ProfileId);
        }
    }
    private async Task DeleteAccount()
    {
        await HouseListingService.DeleteAsync(houseListing.Id);
        Navigation.NavigateTo("/view-all-house-listings"); 
        
    }
    
    private void EditHouseProfile()
    {
        Console.WriteLine("Edit House Profile clicked!");
        // Navigate or open edit page logic here
    }

    private void DeleteHouseProfile()
    {
        Console.WriteLine("Delete House Profile clicked!");
        // Confirm delete logic here
    }
    
    private void HandleApplication()
    {
      //  Navigation.NavigateTo($"/application/{ListingId}");
    }
    
    private List<string> Images = new List<string>
    {
        "/images/loginBackgrounds/1.jpg",
        "/images/loginBackgrounds/2.jpg",
        "/images/loginBackgrounds/3.jpg", 
        "/images/loginBackgrounds/4.jpg"
    };
}
