@page "/view-confirmed-stays-ho"
@using System.Security.Claims
@using DTOs.HouseListing
@using HousePalClient.Components.Layout
@using HousePalClient.ServiceContracts
@using Microsoft.AspNetCore.Components
@layout MainLayout

@inject NavigationManager Navigation
@inject IHouseListingService HouseListingService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject PreloadService PreloadService

<CascadingAuthenticationState>
    <AuthorizeView Roles="HouseOwner">
        <Authorized>
            <div class="listings-container">
                @if (_houseListings == null || !_houseListings.Any())
                {
                    <p>No listings found.</p>
                }
                else
                {
                    @foreach (var listing in _houseListings)
                    {
                        <div class="listing-container">
                            <!-- House Information -->
                            <div class="house-info">
                                <img src="https://localhost:7134/Filesave/@listing.Profile.Pictures[0].Split('.')[0]/@listing.Profile.Pictures[0].Split('.')[1]" alt="House Picture" class="house-image"/>
                                <h2 class="listing-title"><a href="https://localhost:7262/view-listing/@listing.Id" target="_blank">@listing.Profile.Title</a></h2>
                                <p class="listing-dates">@listing.StartDate.ToShortDateString() - @listing.EndDate.ToShortDateString()</p>
                            </div>

                            <!-- Applicants Information -->
                            <div class="applicants-container">
                                <div class="applicants-scroll">
                                    @if (listing.Applications != null && listing.Applications.Any())
                                    {
                                        <h3 class="create-titles">Your House Sitter for this Stay:</h3>

                                        @foreach (var application in listing.Applications)
                                        {
                                            if (application.Status is "Confirmed")
                                            {
                                                <div class="card">
                                                    <div class="card-img-container">
                                                        <img src="https://localhost:7134/Filesave/@application.Sitter!.ProfilePicture!.Split('.')[0]/@application.Sitter.ProfilePicture.Split('.')[1]" alt="...">
                                                    </div>

                                                    <div class="card-body">
                                                        <div class="title-rating">
                                                            <a href="https://localhost:7262/view-sitter-profile/@application.SitterId" target="_blank"><h5>@application.Sitter.Name</h5></a>
                                                        </div>

                                                        <p class="card-text contact" style="font-style: italic">
                                                            Contact @application.Sitter.Name to organize their stay:<br/>
                                                            @application.Sitter.Email<br/>
                                                            @application.Sitter.Phone
                                                        </p>
                                                    
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <h3 class="create-titles">You have no House Sitter for this Stay.</h3>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </Authorized>
    </AuthorizeView>

    <AuthorizeView>
        <NotAuthorized>
            <div class="not-authorized-container">
                <h2>You must be logged in to view this page.</h2>
                <p>Please log in.</p>
                <button class="btn btn-primary" @onclick="NavigateToLogin">Log In</button>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private List<HouseListingDto>? _houseListings;
    private int _userId;

    protected override async Task OnInitializedAsync()
    {
        _houseListings = new List<HouseListingDto>();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is null || !user.Identity.IsAuthenticated)
        {
            Console.WriteLine("Not authenticated");
            return;
        }

        IEnumerable<Claim> claims = user.Claims;
        string userIdAsString = claims.Single(c => c.Type == "Id").Value;
        _userId = int.Parse(userIdAsString);

        await LoadUpcomingHouseListings();
        await InvokeAsync(StateHasChanged);
    }

    private async Task LoadUpcomingHouseListings()
    {
        PreloadService.Show();
        _houseListings = await Task.Run(() => HouseListingService.GetConfirmedStaysHo(_userId).ToList());
        PreloadService.Hide();
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}
