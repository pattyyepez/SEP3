@page "/view-sitter-profile/{profileId:int}"
@using DTOs.HouseSitter
@using HousePalClient.Components.Layout
@using HousePalClient.ServiceContracts
@using Microsoft.AspNetCore.Components
@using Services
@layout MainLayout
@inject NavigationManager Navigation
@inject IHouseSitterService HouseSitterService
@inject ISitterReviewService SitterReviewService
@rendermode InteractiveServer

@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

<head>
    <!-- Add Font Awesome CDN to your head tag -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</head>
@* <p>@houseProfile.Title</p> *@
<div class="profile-container">
    @if (_houseSitter == null)
    {
        <p>Loading house sitter details...</p>
    }
    else
    { 
        <div class="container sitter-profile">
            <!-- Carousel Section -->
            <div class="carousel-container">
                <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        @for (int i = 0; i < _houseSitter.Pictures.Count; i++)
                        {
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i"
                                    class="@(i == 0 ? "active" : "")"
                                    aria-current="@(i == 0 ? "true" : "false")"
                                    aria-label="Slide @i"></button>
                        }
                    </div>
                    <div class="carousel-inner">
                        @foreach (var image in _houseSitter.Pictures)
                        {
                            <div class="carousel-item @(_houseSitter.Pictures.IndexOf(image) == 0 ? "active" : "")">
                                <img src="https://localhost:7134/Filesave/@image.Split('.')[0]/@image.Split('.')[1]" class="d-block w-100" alt="House Sitter Picture" />
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            
            <h1 class="house-title">@_houseSitter.Name</h1>
            <p class="house-description">@_houseSitter.Biography</p>
            
            <hr class="section-divider"/>
           
            <h3>Past experience</h3>
            <p class="house-description">@_houseSitter.Experience</p>

            <hr class="section-divider"/>
            
            <div class="skills-section">
                <h3>Skills</h3>
                <div class="skills-container">
                    @foreach (var skill in _houseSitter.Skills)
                    {
                        <div class="pill">@skill</div>
                    }
                </div>
            </div>

            <hr class="section-divider"/>
            
            <div>
                @foreach (var review in _houseSitter.Reviews!)
                {
                    <div>
                        <p>@review.Owner!.Name - @review.Date</p>
                        <p>@review.Rating</p>
                        <p>@review.Comment</p>
                    </div>
                }
            </div>
            
            
            @*
        <div class="chores-amenities-row">
        <div class="chores-column">
        <h3>House Chores</h3>
        <div class="chores-container">
            @foreach (var chore in _houseProfile.Chores)
            {
                <div class="pill">@chore</div>
            }
        </div>
        </div>
        <div class="vertical-divider"></div>
        <div class="amenities-column">
            <h3>House Amenities</h3>
            <div class="amenities-container">
                @foreach (var amenity in _houseProfile.Amenities)
                {
                    <div class="pill">@amenity</div>
                }
            </div>
        </div>
        </div>
        
            <hr class="section-divider"/>
        
        <!-- House Rules Section -->
        <h3>House Rules</h3>
        <ol class="house-rules">
            @foreach (var rule in _houseProfile.Rules)
            {
                <li>@rule</li>
            }
        </ol>
        
            <hr class="section-divider"/>
        
            <!-- Meet the Host Section -->
            <h3>Meet the Host</h3>
            <div class="host-section">
                <img src="https://localhost:7134/Filesave/@_houseProfile.Owner.ProfilePicture.Split('.')[0]/@_houseProfile.Owner.ProfilePicture.Split('.')[1]" alt="Host Profile Picture" class="host-picture"/>
                <p class="host-bio">@_houseProfile.Owner.Biography</p>
            </div>
        
            <hr class="section-divider"/>
        
            <!-- Buttons Section -->
            <div class="action-buttons">
                <button type="button" class="btn btn-primary" @onclick="() => EditHouseProfile(_houseProfile.Id)">Edit House Profile</button>
                <button type="button" class="btn btn-secondary" @onclick="DeleteHouseProfile">Delete House Profile</button>
            </div>*@
        </div>
    }
</div>

<style>

    @@font-face {
        font-family: 'LogoFont';
        src: url('fonts/logo-font.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    @@font-face {
        font-family: 'FuturaFont';
        src: url('fonts/futura.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
    }
    
    h3 {
        font-family: 'LogoFont', sans-serif;
        color: #3d3d3d;
    }

    .carousel-container {
        margin-bottom: 2em;
    }

    .host-section {
        display: flex;
        align-items: center;
        gap: 1.5em;
    }

    .host-picture {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
    }

    .host-bio {
        flex: 1;
        font-size: 1rem;
        color: #333;
        line-height: 1.6;
    }
    
    .carousel img { 
        max-height: 32em; 
        object-fit: cover; 
        border-radius: 10px; 
    } 
    
    .profile-container{
        padding: 0.85em;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .house-title {
        font-size: 2.5rem;
        color: #333;
        margin-bottom: 0.5em;
        font-family: 'LogoFont', sans-serif;
    }
    
    .skills-section {
        display: flex;
    }

    .skills-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
        margin-top: 1em;
    }

    .house-location {
        font-size: 1.25rem;
        color: #3d3d3d;
        margin-bottom: 1em;
        font-family: 'FuturaFont', sans-serif;
    }

    .house-description {
        font-size: 1rem;
        color: #3d3d3d;
        margin-bottom: 1.5em;
        font-family: 'FuturaFont', sans-serif;
    }

    .section-divider {
        margin: 2em 0;
        border: 0;
        height: 1px;
        background-color: #ddd;
    }

    .chores-amenities-row {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        gap: 1em;
        font-family: 'FuturaFont', sans-serif;
    }

    .chores-column, .amenities-column {
        flex: 1;
    }

    .chores-container, .amenities-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
        margin-top: 1em;
    }

    .pill {
        background-color: #ff7e5f;
        color: white;
        padding: 0.5em 1em;
        border-radius: 50px;
        font-size: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: 'FuturaFont', sans-serif;
    }

    .vertical-divider {
        width: 1px;
        background-color: #ddd;
        height: auto;
        margin: 0 1em;
    }

    .house-rules {
        list-style: decimal inside;
        font-size: 1rem;
        color: #3d3d3d;
        line-height: 1.8;
        margin: 1em 0;
        font-family: 'FuturaFont', sans-serif;
    }

    .house-rules li {
        margin-bottom: 0.5em;
    }

    .action-buttons {
        margin-top: 2em;
        display: flex;
        gap: 2em;
        justify-content: center;
    }
    
</style>

@code {
    
    [Parameter]
    public int ProfileId { get; set; } 

    private HouseSitterDto? _houseSitter;

    protected override async Task OnInitializedAsync()
    {
        await LoadHouseSitter();
        await InvokeAsync(StateHasChanged);
    }

    private async Task LoadHouseSitter()
    {
        _houseSitter = await HouseSitterService.GetSingleAsync(ProfileId);
        _houseSitter.Reviews = SitterReviewService.GetAllReviewsForSitter(ProfileId).ToList();
    }
}
