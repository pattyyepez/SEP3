syntax = "proto3";
package en.via.sep3_t3;
option java_multiple_files = true;
option csharp_namespace = "DatabaseRepositories";

// HouseOwner

message HouseOwnerRequest {
  int32 id = 1;
}

message HouseOwnerResponse {
  int32 id = 1;

  string email = 2;
  string password = 3;
  string profilePicture = 4;
  string CPR = 5;
  string phone = 6;
  bool isVerified = 7;
  int32 adminId = 8;

  string address = 9;
  string biography = 10;
}

message CreateHouseOwnerRequest {
  string email = 1;
  string password = 2;
  string profilePicture = 3;
  string CPR = 4;
  string phone = 5;
  bool isVerified = 6;
  int32 adminId = 7;

  string address = 8;
  string biography = 9;
}

message UpdateHouseOwnerRequest {
  int32 id = 1;

  string email = 2;
  string password = 3;
  string profilePicture = 4;
  string CPR = 5;
  string phone = 6;
  bool isVerified = 7;
  int32 adminId = 8;

  string address = 9;
  string biography = 10;
}

message AllHouseOwnersRequest{}

message AllHouseOwnersResponse{
  repeated HouseOwnerResponse houseOwners = 1;
}

service HouseOwnerService {
  rpc GetHouseOwner (HouseOwnerRequest) returns (HouseOwnerResponse);
  rpc GetAllHouseOwners (AllHouseOwnersRequest) returns (AllHouseOwnersResponse);
  rpc CreateHouseOwner (CreateHouseOwnerRequest) returns (HouseOwnerResponse);
  rpc UpdateHouseOwner (UpdateHouseOwnerRequest) returns (HouseOwnerResponse);
  rpc DeleteHouseOwner (HouseOwnerRequest) returns (HouseOwnerResponse);
}

//  HouseSitter

message HouseSitterRequest {
  int32 id = 1;
}

message HouseSitterResponse {
  int32 id = 1;

  string email = 2;
  string password = 3;
  string profilePicture = 4;
  string CPR = 5;
  string phone = 6;
  bool isVerified = 7;
  int32 adminId = 8;

  string experience = 9;
  string biography = 10;
  repeated string pictures = 11;
  repeated string skills = 12;
}

message CreateHouseSitterRequest {
  string email = 1;
  string password = 2;
  string profilePicture = 3;
  string CPR = 4;
  string phone = 5;
  bool isVerified = 6;
  int32 adminId = 7;

  string experience = 8;
  string biography = 9;
  repeated string pictures = 11;
  repeated string skills = 12;
}

message UpdateHouseSitterRequest {
  int32 id = 1;

  string email = 2;
  string password = 3;
  string profilePicture = 4;
  string CPR = 5;
  string phone = 6;
  bool isVerified = 7;
  int32 adminId = 8;

  string experience = 9;
  string biography = 10;
  repeated string pictures = 11;
  repeated string skills = 12;
}

message AllHouseSittersRequest{}

message AllHouseSittersResponse{
  repeated HouseSitterResponse houseSitters = 1;
}

service HouseSitterService {
  rpc GetHouseSitter (HouseSitterRequest) returns (HouseSitterResponse);
  rpc GetAllHouseSitters (AllHouseSittersRequest) returns (AllHouseSittersResponse);
  rpc CreateHouseSitter (CreateHouseSitterRequest) returns (HouseSitterResponse);
  rpc UpdateHouseSitter (UpdateHouseSitterRequest) returns (HouseSitterResponse);
  rpc DeleteHouseSitter (HouseSitterRequest) returns (HouseSitterResponse);
}

//  HouseProfile

message HouseProfileRequest {
  int32 id = 1;
}

message HouseProfileResponse {
  int32 id = 1;
  int32 ownerId = 2;
  string description = 3;
  string address = 4;
  string region = 5;
  string city = 6;
  repeated string amenities = 7;
  repeated string chores = 8;
  repeated string rules = 9;
  repeated string pictures = 10;
}

message CreateHouseProfileRequest {
  int32 ownerId = 1;
  string description = 2;
  string address = 3;
  string region = 4;
  string city = 5;
  repeated string amenities = 6;
  repeated string chores = 7;
  repeated string rules = 8;
  repeated string pictures = 9;
}

message UpdateHouseProfileRequest {
  int32 id = 1;
  int32 ownerId = 2;
  string description = 3;
  string address = 4;
  string region = 5;
  string city = 6;
  repeated string amenities = 7;
  repeated string chores = 8;
  repeated string rules = 9;
  repeated string pictures = 10;
}

service HouseProfileService {
  rpc GetHouseProfile (HouseProfileRequest) returns (HouseProfileResponse);
  rpc CreateHouseProfile (CreateHouseProfileRequest) returns (HouseProfileResponse);
  rpc UpdateHouseProfile (UpdateHouseProfileRequest) returns (HouseProfileResponse);
  rpc DeleteHouseProfile (HouseProfileRequest) returns (HouseProfileResponse);
}